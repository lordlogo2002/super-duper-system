import pygame
import settings
from logger import glob



_ = False
MINI_MAP = [
    [1, 1, 1, 1, 1, 1, 2, 2, 5, 2, 2, 2, 2, 5, 2, 2, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _],
    [1, _, _, _, _, 1, 2, _, _, _, _, _, _, _, _, _, 2, 1, _, _, _, _, _, _, _, _, _, 3, _, _, 1],
    [1, _, _, _, _, 1, 2, _, _, _, _, _, _, _, 2, _, _, _, _, _, _, _, _, _, _, _, _, _, 3, _, 1],
    [1, _, _, _, _, 1, 2, _, _, 2, 5, 2, _, _, 5, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 3, 1],
    [1, _, _, _, _, 1, 2, _, _, 5, _, 5, _, _, 2, _, _, _, _, _, 3, 3, 3, _, _, 3, _, _, _, _, 1],
    [_, 2, _, _, 2, 1, 2, _, _, 2, _, 2, _, _, _, _, 2, 1, _, _, 3, 3, 3, _, _, 3, _, _, _, _, 1],
    [_, 2, _, _, 2, 1, 2, _, _, _, _, _, _, _, _, _, 2, 1, 1, 1, 1, 1, 1, 4, 4, 1, _, _, _, _, 1],
    [_, 2, _, _, 2, 1, 2, _, _, _, _, _, _, 2, 2, 2, 2, 1, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [_, 2, _, _, 2, 1, 2, _, _, 2, 2, _, _, _, 2, _, 2, 1, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [_, 5, _, _, 5, 2, 2, _, _, _, 5, _, _, _, 2, _, 2, 1, _, _, 2, 2, _, _, _, 2, 2, 2, 2, _, 1],
    [_, 2, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 2, 1, _, _, 2, 2, _, _, _, _, 2, 2, _, _, 1],
    [_, 2, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 2, 1, _, _, _, 2, _, _, _, _, _, _, _, _, 1],
    [_, 2, 2, 2, 2, 2, 2, 2, 5, 2, 2, 2, 2, 5, 2, 2, _, 1, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [_, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 1, 1, 1, 4, 1, 1, _, _, 1, 1, 1],
    [1, _, _, _, _, _, _, _, _, _, _, 3, _, _, _, _, 1, 3, _, _, _, 1, _, _, _, 1, _, _, _, _, 1],
    [1, _, 3, 3, 3, _, _, 3, _, _, _, 3, _, 3, _, _, 1, 3, _, _, _, _, 1, 1, 1, _, _, _, _, _, 4],
    [1, _, _, _, _, _, _, 3, _, _, _, 3, _, 3, 3, _, 1, 3, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, 3, _, _, _, _, _, _, _, _, _, 3, _, _, _, _, 1, _, 3, 3, 1, _, _, _, _, _, 1, 1, 1, 1, 1],
    [1, _, _, _, _, 3, _, _, 3, 3, 3, 3, _, _, _, _, 1, 3, _, _, _, 1, _, _, _, 1, _, _, _, _, 3],
    [1, _, _, 3, 3, 3, _, _, _, _, _, _, _, 3, 3, _, 1, 3, 3, 3, 3, _, _, _, _, _, 3, 3, 3, 3, 3],
    [1, _, _, 3, 3, 3, _, _, _, _, _, _, _, 3, 3, _, 1, 3, _, _, _, _, _, _, _, _, _, _, _, _, 3],
    [1, _, _, _, _, 3, _, _, 3, 3, 3, _, _, 3, 3, _, 1, 3, _, _, _, _, _, _, _, _, _, _, _, _, 3],
    [1, _, _, _, _, 3, _, _, _, _, 3, _, _, 3, _, _, _, _, _, _, _, 3, 3, 3, 3, 3, 3, _, _, _, 3],
    [1, _, _, _, _, _, _, 3, _, _, 3, _, _, 3, _, _, _, _, _, _, 3, _, _, _, _, _, _, 3, _, _, 3],
    [1, _, 3, 3, _, _, _, 3, _, _, _, _, _, 3, _, _, 1, 3, _, _, _, 3, 3, 3, 3, 3, 3, _, _, _, 3],
    [1, _, _, 3, _, _, _, 3, 3, 3, _, _, _, 3, 3, _, 1, 3, _, _, _, _, _, _, _, _, _, _, _, _, 3],
    [1, _, _, 3, 3, 3, _, _, _, _, _, 3, _, 3, 3, _, 1, 3, 3, _, _, _, _, _, _, _, _, _, _, 3, 3],
    [1, _, _, _, _, 3, _, _, _, _, _, 3, _, _, _, _, 1, 3, 3, 3, _, _, _, _, _, _, _, _, 3, 3, 3],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, _],
    [_, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _]
]

#MINI_MAP = [[_ for i in range(10)] for i in range(10)]


class Map:
    def __init__(self, game):
        # Starting the construction log for Map.
        glob.gen.info("Initializing Map...")

        # Link to game instance.
        self.game = game

        # Load the mini_map.
        self.mini_map = MINI_MAP
        glob.gen.debug(f"Loaded Map Dimensions: Width: {len(self.mini_map[0])}, Height: {len(self.mini_map)}")

        # Load the world map.
        self.world_map = {}
        self.get_map()

        # Concluding the initialization log for Map.
        glob.gen.info("Map initialized successfully.")

    def get_map(self):
        glob.gen.debug("load world map")
        for y, row in enumerate(self.mini_map):
            for x, value in enumerate(row):
                if value is _:
                    continue
                self.world_map[(x, y)] = value

    def draw(self):
        [pygame.draw.rect(self.game.screen, 'darkgray', (pos[0] * settings.GAME.WIDTH_FACTOR, pos[1] * settings.GAME.HEIGHT_FACTOR, 100, 100), 2)
         for pos in self.world_map]
